{"version":3,"sources":["assets/TodoApi.js","actions/actionCreator.js","components/TodoForm.js","components/TodoDeleteItem.js","components/TodoItem.js","components/TodoList.js","App.js","reducers/todo.js","index.js"],"names":["TodoApi","dispatch","defaultData","id","Math","random","toString","substr","text","done","date","Date","type","data","item","actionAddItem","actionRemoveItem","actionChangeStatus","TodoForm","removeAll","e","preventDefault","props","this","inputText","value","replace","addItem","focus","classes","style","position","marginTop","Container","maxWidth","onSubmit","addNewItem","Grid","container","spacing","xs","TextField","fullWidth","label","margin","inputRef","input","alignItems","justify","Button","className","addBt","variant","size","color","deleteBt","onClick","Component","withStyles","theme","background","border","borderRadius","boxShadow","height","padding","TodoDeleteItem","removeItem","todoItem","setState","openDialog","handleClickOpen","handleClose","state","event","ListItemSecondaryAction","IconButton","edge","aria-label","removeItemDialog","Dialog","open","onClose","aria-labelledby","aria-describedby","DialogTitle","DialogContent","DialogContentText","DialogActions","autoFocus","TodoItem","changeStatus","ListItem","button","key","ListItemText","primary","textDecoration","secondary","moment","fromNow","TodoList","listAllTodo","AppBar","Toolbar","Typography","marginLeft","marginRight","Badge","badgeContent","todo","filter","removeAllTodo","List","fontSize","display","justifyContent","map","TodoListContainer","connect","App","CssBaseline","sortedList","list","sort","lhs","rhs","reducers","combineReducers","action","newState","toArray","push","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"oTAMqBA,E,2GAIjB,OAAO,SAAAC,GAEL,IAAMC,EAAc,CAClB,CAACC,GAAGC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAAIC,KAAK,iBAAkBC,MAAM,EAAOC,KAAM,IAAIC,KAAK,wBAChG,CAACR,GAAGC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAAIC,KAAK,WAAYC,MAAM,EAAOC,KAAM,IAAIC,KAAK,wBAC1F,CAACR,GAAGC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAAIC,KAAK,0BAA2BC,MAAM,EAAMC,KAAM,IAAIC,KAAK,wBACxG,CAACR,GAAGC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAAIC,KAAK,WAAYC,MAAM,EAAMC,KAAM,IAAIC,KAAK,yBAM3F,OAFAV,ECnBG,CAACW,KAAM,WAAYC,KDmBEX,IAEjBA,K,8BAIIY,GACb,OAAO,SAAAb,GACLA,EChBC,SAAuBa,GAC5B,MAAO,CAACF,KAAM,UAAWE,QDeZC,CAAcD,O,sCAKzB,OAAO,SAAAb,GACLA,ECzBG,CAACW,KAAM,iB,iCD6BIT,GAChB,OAAO,SAAAF,GAEL,OADAA,ECpCC,SAA0BE,GAC/B,MAAO,CAACS,KAAM,aAAcT,MDmCfa,CAAiBb,IACnBA,K,mCAISA,GAClB,OAAO,SAAAF,GAEL,OADAA,EC/BC,SAA4BE,GACjC,MAAO,CAACS,KAAM,eAAgBT,MD8BjBc,CAAmBd,IACrBA,O,wCEvCPe,E,2MAaJC,UAAY,SAACC,GACXA,EAAEC,iBACF,EAAKC,MAAMH,a,0EAbFC,GACTA,EAAEC,iBAE6C,KAA5CE,KAAKC,UAAUC,MAAMC,QAAQ,MAAO,MACrCH,KAAKD,MAAMK,QAAQJ,KAAKC,UAAUC,OAClCF,KAAKC,UAAUC,MAAQ,IAGzBF,KAAKC,UAAUI,U,+BAQR,IAAD,OAEEC,EAAYN,KAAKD,MAAjBO,QAER,OACE,6BAASC,MAAO,CAACC,SAAS,WAAYC,UAAU,KAC9C,kBAACC,EAAA,EAAD,CAAWC,SAAS,MAClB,0BAAMC,SAAW,SAACf,GAAD,OAAO,EAAKgB,WAAWhB,KACtC,kBAACiB,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,GACvB,kBAACF,EAAA,EAAD,CAAMvB,MAAI,EAAC0B,GAAI,IACb,kBAACC,EAAA,EAAD,CACEC,WAAS,EACTvC,GAAG,gBACHwC,MAAM,WACNC,OAAO,SACPC,SAAU,SAACC,GAAD,OAAW,EAAKtB,UAAYsB,MAG1C,kBAACT,EAAA,EAAD,CAAMvB,MAAI,EAAC0B,GAAI,EAAGF,WAAS,EAACS,WAAW,SAASC,QAAU,YACxD,kBAACC,EAAA,EAAD,CAAQC,UAAWrB,EAAQsB,MAAOC,QAAQ,YAAYC,KAAK,QAAQC,MAAM,UAAU1C,KAAK,UAAxF,QAEF,kBAACyB,EAAA,EAAD,CAAMvB,MAAI,EAAC0B,GAAI,EAAGF,WAAS,EAACS,WAAW,SAASC,QAAU,YACxD,kBAACC,EAAA,EAAD,CAAQC,UAAWrB,EAAQ0B,SAAUH,QAAQ,YAAYC,KAAK,QAAQC,MAAM,YAAYE,QAASjC,KAAKJ,WAAtG,sB,GAxCOsC,aA2ERC,eArBA,SAAAC,GAAK,MAAK,CACvBJ,SAAU,CACRK,WAAY,mDACZC,OAAQ,EACRC,aAAc,EACdC,UAAW,wCACXT,MAAO,QACPU,OAAQ,GACRC,QAAS,UAEXd,MAAO,CACLS,WAAY,mDACZC,OAAQ,EACRC,aAAc,EACdC,UAAW,uCACXT,MAAO,QACPU,OAAQ,GACRC,QAAS,aAIEP,CAAmBxC,G,kGCvEbgD,E,YAEnB,WAAY5C,GAAO,IAAD,8BAChB,4CAAMA,KAYR6C,WAAa,WACX,EAAK7C,MAAM6C,WAAW,EAAK7C,MAAM8C,SAASjE,IAC1C,EAAKkE,SAAS,CAACC,YAAW,KAfV,EAkBlBC,gBAAkB,WAChB,EAAKF,SAAS,CAACC,YAAW,KAnBV,EAsBlBE,YAAc,WACZ,EAAKH,SAAS,CAACC,YAAW,KApB1B,EAAKG,MAAQ,CACXH,YAAW,GAJG,E,8EAQDI,GACfA,EAAMrD,iBACNE,KAAK8C,SAAS,CAACC,YAAW,M,+BAgBnB,IAAD,OAEN,OACE,6BACE,kBAACK,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYC,KAAK,MAAMC,aAAW,SAAStB,QAAU,SAACkB,GAAD,OAAW,EAAKK,iBAAiBL,KACpF,kBAAC,IAAD,QAGJ,kBAACM,EAAA,EAAD,CACEC,KAAM1D,KAAKkD,MAAMH,WACjBY,QAAS3D,KAAKiD,YACdW,kBAAgB,qBAChBC,mBAAiB,4BAEjB,kBAACC,EAAA,EAAD,CAAalF,GAAG,sBAAsB,eACtC,kBAACmF,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAmBpF,GAAG,4BAAtB,8CAC6C,gCAASoB,KAAKD,MAAM8C,SAAS5D,MAD1E,MAIF,kBAACgF,EAAA,EAAD,KACE,kBAACvC,EAAA,EAAD,CAAQO,QAASjC,KAAKiD,YAAalB,MAAM,WAAzC,MAGA,kBAACL,EAAA,EAAD,CAAQO,QAASjC,KAAK4C,WAAYb,MAAM,UAAUmC,WAAS,GAA3D,c,GArDgChC,a,iBCJvBiC,E,2MAEnBC,aAAe,SAACjB,GACd,EAAKpD,MAAMqE,aAAa,EAAKrE,MAAM8C,SAASjE,K,wEAGrC,IAAD,OAEN,OACE,kBAACyF,EAAA,EAAD,CAAUC,QAAM,EAACC,IAAKvE,KAAKD,MAAM8C,SAASjE,IACxC,kBAAC4F,EAAA,EAAD,CACEvC,QAAU,SAACkB,GAAD,OAAW,EAAKiB,aAAajB,IACvCsB,QAAQ,0BAAMlE,OAAkC,IAA3BP,KAAKD,MAAM8C,SAAS3D,KAAc,CAACwF,eAAgB,gBAAkB,IAAK1E,KAAKD,MAAM8C,SAAS5D,MACnH0F,UAAWC,IAAO5E,KAAKD,MAAM8C,SAAS1D,MAAM0F,YAE9C,kBAAC,EAAmB7E,KAAKD,Y,GAfKmC,a,QCMhC4C,E,4LAGF9E,KAAKD,MAAMgF,gB,+BAGJ,IAAD,OAEN,OACE,6BACE,kBAACC,EAAA,EAAD,CAAQxE,SAAS,UACf,kBAACyE,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAYrD,QAAQ,MAApB,gBAGA,6BAAStB,MAAO,CAAC4E,WAAY,OAAQC,YAAa,GAAI5E,SAAU,aAC9D,kBAAC6E,EAAA,EAAD,CAAOC,aACLtF,KAAKD,MAAMwF,KACIC,QAAO,SAAAD,GAAI,OAAkB,IAAdA,EAAKrG,QACpB4C,KAEfC,MAAM,aACN,kBAAC,IAAD,UAKR,kBAAC,EAAD,CAAU3B,QAASJ,KAAKD,MAAMK,QAASR,UAAWI,KAAKD,MAAM0F,gBAC7D,kBAAC/E,EAAA,EAAD,CAAWC,SAAS,KAAKJ,MAAO,CAACE,UAAU,KACzC,kBAACiF,EAAA,EAAD,CAAMnF,MAAO,CAACC,SAAU,aAEK,IAAzBR,KAAKD,MAAMwF,KAAKzD,KACd,0BAAMvB,MAAO,CAACwB,MAAM,MAAO4D,SAAS,GAAIC,QAAQ,OAAQpE,WAAW,SAAUqE,eAAe,WAA5F,+BACA7F,KAAKD,MAAMwF,KAAKO,KAAI,SAAAP,GAAI,OACxB,kBAAC,EAAD,CAAU1C,SAAU0C,EAAM3C,WAAY,EAAK7C,MAAM6C,WAAYwB,aAAc,EAAKrE,MAAMqE,aAAcG,IAAKgB,EAAK3G,e,GAlCvGsD,aAsER6D,EADWC,aAxBF,SAAA9C,GACtB,MAAO,CAACqC,KAAOrC,EAAMqC,SAGI,SAAA7G,GACzB,MAAO,CACLqG,YAAc,WACZrG,EAASD,EAAQsG,gBAEnBU,cAAgB,WACd/G,EAASD,EAAQgH,kBAEnB7C,WAAa,SAAChE,GACZF,EAASD,EAAQmE,WAAWhE,KAE9BwB,QAAU,SAACb,GACTb,EAASD,EAAQ2B,QAAQb,KAE3B6E,aAAe,SAAC7E,GACdb,EAASD,EAAQ2F,aAAa7E,QAKVyG,CAA4ClB,G,SCvEvDmB,MATf,WACE,OACI,iCACE,kBAACC,EAAA,EAAD,MACA,kBAAC,EAAD,Q,wBCNFC,EAAa,SAAAC,GAAI,OAAIA,EAAKC,MAAK,SAASC,EAAKC,GACjD,OAAOD,EAAInH,KAAOoH,EAAIpH,SCOxB,IAAMqH,EAAWC,YAAgB,CAAClB,KDJ3B,WAAuC,IAAzBrC,EAAwB,uDAAlB,IAAIwC,IAAOgB,EAAO,uCAE3C,GAAmB,aAAhBA,EAAOrH,KAER,OAAO8G,EAAW,IAAIT,IAAKS,EAAWO,EAAOpH,QAG/C,GAAmB,YAAhBoH,EAAOrH,KAAmB,CAE3B,IAAIsH,EAAWzD,EAAM0D,UAErB,OADAD,EAASE,KAAK,CAACjI,GAAGC,KAAKC,SAASC,SAAS,IAAIC,OAAO,EAAG,GAAGC,KAAKyH,EAAOnH,KAAML,MAAK,EAAOC,KAAK,IAAIC,OAC1F+G,EAAW,IAAIT,IAAKS,EAAWQ,KAGxC,GAAmB,eAAhBD,EAAOrH,KAAsB,CAE9B,IAAMsH,EAAWzD,EAAMsC,QAAO,SAAAD,GAAI,OAAIA,EAAK3G,KAAO8H,EAAO9H,MAEzD,OAAqB,IAAlB+H,EAAS7E,KACH,IAAI4D,IAGNS,EAAW,IAAIT,IAAKS,EAAWQ,KAGxC,GAAmB,iBAAhBD,EAAOrH,KAAwB,CAEhC,IAAMsH,EAAWzD,EACd4C,KAAI,SAAAP,GAEH,OADAA,EAAKrG,KAAOqG,EAAK3G,KAAO8H,EAAO9H,IAAM2G,EAAKrG,KAAOqG,EAAKrG,KAC/CqG,KAERqB,UAEH,OAAO,IAAIlB,IAAKS,EAAWQ,IAG7B,MAAmB,cAAhBD,EAAOrH,KAED,IAAIqG,IAGNxC,KCrCH4D,EAAQC,YAAYP,EAASQ,YAAgBC,MAEnDC,IAASC,OACP,kBAAC,IAAD,CAAUL,MAAOA,GACf,kBAAC,EAAD,OAEFM,SAASC,eAAe,W","file":"static/js/main.d0ad181a.chunk.js","sourcesContent":["import { actionTodoList,\n        actionRemoveItem,\n        actionRemoveAll,\n        actionAddItem,\n        actionChangeStatus } from '../actions/actionCreator';\n\nexport default class TodoApi{\n\n  static listAllTodo(){\n\n    return dispatch => {\n\n      const defaultData = [\n        {id:Math.random().toString(36).substr(2, 9), text:'To Make Coffee', done: false, date: new Date('2019-09-22T03:24:00')},\n        {id:Math.random().toString(36).substr(2, 9), text:'Buy Book', done: false, date: new Date('2019-09-22T10:20:00')},\n        {id:Math.random().toString(36).substr(2, 9), text:'Study 1 hour of English', done: true, date: new Date('2019-09-19T05:14:00')},\n        {id:Math.random().toString(36).substr(2, 9), text:'Buy milk', done: true, date: new Date('2019-09-18T01:14:00')},\n      ];\n\n\n      dispatch(actionTodoList(defaultData));\n\n      return defaultData;\n    }\n  }\n\n  static addItem(item){\n    return dispatch => {\n      dispatch(actionAddItem(item));\n    }\n  }\n\n  static removeAllTodo(){\n    return dispatch => {\n      dispatch(actionRemoveAll());\n    }\n  }\n\n  static removeItem(id){\n    return dispatch => {\n      dispatch(actionRemoveItem(id));\n      return id;\n    }\n  }\n\n  static changeStatus(id){\n    return dispatch => {\n      dispatch(actionChangeStatus(id));\n      return id;\n    }\n  }\n}\n","export function actionTodoList(data){\n  return {type: 'TODOLIST', data};\n}\n\nexport function actionRemoveItem(id){\n  return {type: 'REMOVEITEM', id};\n}\n\nexport function actionRemoveAll(){\n  return {type: 'REMOVEALL'};\n}\n\nexport function actionAddItem(item){\n  return {type: 'ADDITEM', item};\n}\n\nexport function actionChangeStatus(id){\n  return {type: 'CHANGESTATUS', id};\n}\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Container from '@material-ui/core/Container';\nimport { withStyles } from '@material-ui/styles';\n\nclass TodoForm extends Component{\n\n  addNewItem(e){\n    e.preventDefault();\n\n    if(this.inputText.value.replace(/\\s/g, '') !== \"\"){\n      this.props.addItem(this.inputText.value);\n      this.inputText.value = \"\";\n    }\n\n    this.inputText.focus();\n  }\n\n  removeAll = (e) => {\n    e.preventDefault();\n    this.props.removeAll();\n  }\n\n  render(){\n\n    const { classes } = this.props;\n\n    return(\n      <section style={{position:'relative', marginTop:20}}>\n        <Container maxWidth=\"sm\">\n          <form onSubmit={((e) => this.addNewItem(e))}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <TextField\n                  fullWidth\n                  id=\"outlined-name\"\n                  label=\"Add Task\"\n                  margin=\"normal\"\n                  inputRef={(input) => this.inputText = input}\n                />\n              </Grid>\n              <Grid item xs={7} container alignItems=\"center\" justify = \"flex-end\">\n                <Button className={classes.addBt} variant=\"contained\" size=\"small\" color=\"primary\" type=\"submit\">add</Button>\n              </Grid>\n              <Grid item xs={5} container alignItems=\"center\" justify = \"flex-end\">\n                <Button className={classes.deleteBt} variant=\"contained\" size=\"small\" color=\"secondary\" onClick={this.removeAll}>clean all</Button>\n              </Grid>\n            </Grid>\n          </form>\n        </Container>\n      </section>\n    );\n  }\n}\n\nTodoForm.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nconst styles = theme => ({\n  deleteBt: {\n    background: 'linear-gradient(45deg, #FE6B8B 30%, #FF8E53 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(255, 105, 135, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n  addBt: {\n    background: 'linear-gradient(45deg, #2196F3 30%, #21CBF3 90%)',\n    border: 0,\n    borderRadius: 3,\n    boxShadow: '0 3px 5px 2px rgba(33, 203, 243, .3)',\n    color: 'white',\n    height: 48,\n    padding: '0 30px',\n  },\n});\n\nexport default withStyles(styles)(TodoForm);\n","import React, { Component } from 'react'\n\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport IconButton from '@material-ui/core/IconButton';\n\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nexport default class TodoDeleteItem extends Component{\n\n  constructor(props){\n    super(props);\n\n    this.state = {\n      openDialog:false\n    };\n  }\n\n  removeItemDialog(event){\n    event.preventDefault();\n    this.setState({openDialog:true});\n  }\n\n  removeItem = () => {\n    this.props.removeItem(this.props.todoItem.id);\n    this.setState({openDialog:false});\n  }\n\n  handleClickOpen = () => {\n    this.setState({openDialog:true});\n  };\n\n  handleClose = () => {\n    this.setState({openDialog:false});\n  };\n\n  render(){\n\n    return(\n      <div>\n        <ListItemSecondaryAction>\n          <IconButton edge=\"end\" aria-label=\"delete\" onClick={((event) => this.removeItemDialog(event))}>\n            <DeleteIcon />\n          </IconButton>\n        </ListItemSecondaryAction>\n        <Dialog\n          open={this.state.openDialog}\n          onClose={this.handleClose}\n          aria-labelledby=\"alert-dialog-title\"\n          aria-describedby=\"alert-dialog-description\"\n        >\n          <DialogTitle id=\"alert-dialog-title\">{\"Delete Item\"}</DialogTitle>\n          <DialogContent>\n            <DialogContentText id=\"alert-dialog-description\">\n              Are you sure you want to remove the item:  <strong>{this.props.todoItem.text}</strong>?\n            </DialogContentText>\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={this.handleClose} color=\"primary\">\n              No\n            </Button>\n            <Button onClick={this.removeItem} color=\"primary\" autoFocus>\n              Yes\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </div>\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemText from '@material-ui/core/ListItemText';\n\nimport TodoDeleteItem from './TodoDeleteItem'\n\nimport moment from 'moment'\n\nexport default class TodoItem extends Component{\n\n  changeStatus = (event) => {\n    this.props.changeStatus(this.props.todoItem.id);\n  }\n\n  render(){\n\n    return(\n      <ListItem button key={this.props.todoItem.id}>\n        <ListItemText\n          onClick={((event) => this.changeStatus(event))}\n          primary=<span style={this.props.todoItem.done===true ? {textDecoration: 'line-through'} : {}}>{this.props.todoItem.text}</span>\n          secondary={moment(this.props.todoItem.date).fromNow()}\n        />\n        <TodoDeleteItem {...this.props}/>\n      </ListItem>\n    );\n  }\n}\n","import React, { Component } from 'react'\nimport List from '@material-ui/core/List';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport AppBar from '@material-ui/core/AppBar';\nimport Badge from '@material-ui/core/Badge';\nimport AlarmOn from '@material-ui/icons/AlarmOn';\n\nimport TodoApi from '../assets/TodoApi';\nimport TodoForm from './TodoForm';\nimport TodoItem from './TodoItem';\n\nimport { connect } from 'react-redux';\n\nclass TodoList extends Component{\n\n  componentDidMount(){\n    this.props.listAllTodo();\n  }\n\n  render(){\n\n    return(\n      <div>\n        <AppBar position=\"static\">\n          <Toolbar>\n            <Typography variant=\"h6\">\n              THINGS TO DO\n            </Typography>\n            <section style={{marginLeft: 'auto', marginRight: 10, position: 'relative'}}>\n              <Badge badgeContent={\n                this.props.todo\n                              .filter(todo => todo.done === false)\n                              .size\n\n              } color=\"secondary\">\n                <AlarmOn />\n              </Badge>\n            </section>\n          </Toolbar>\n        </AppBar>\n        <TodoForm addItem={this.props.addItem} removeAll={this.props.removeAllTodo}/>\n        <Container maxWidth=\"sm\" style={{marginTop:30}}>\n          <List style={{position: 'relative'}}>\n            {\n              this.props.todo.size === 0\n              ? <span style={{color:'red', fontSize:16, display:'flex', alignItems:'center', justifyContent:'center'}}>No activity to show now! :)</span>\n              : this.props.todo.map(todo => (\n                <TodoItem todoItem={todo} removeItem={this.props.removeItem} changeStatus={this.props.changeStatus} key={todo.id}/>\n              ))\n\n            }\n          </List>\n        </Container>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = state => {\n  return {todo : state.todo}\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    listAllTodo : () => {\n      dispatch(TodoApi.listAllTodo());\n    },\n    removeAllTodo : () => {\n      dispatch(TodoApi.removeAllTodo());\n    },\n    removeItem : (id) => {\n      dispatch(TodoApi.removeItem(id));\n    },\n    addItem : (item) => {\n      dispatch(TodoApi.addItem(item));\n    },\n    changeStatus : (item) => {\n      dispatch(TodoApi.changeStatus(item));\n    }\n  }\n};\n\nconst TodoListContainer = connect(mapStateToProps,mapDispatchToProps)(TodoList);\nexport default TodoListContainer\n","import React from 'react';\nimport TodoList from './components/TodoList';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n  return (\n      <section>\n        <CssBaseline />\n        <TodoList/>\n      </section>\n  );\n}\n\nexport default App;\n","import {List} from 'immutable';\n\nconst sortedList = list => list.sort(function(lhs, rhs) {\n  return lhs.date < rhs.date;\n});\n\nexport function todo(state=new List(),action){\n\n  if(action.type === 'TODOLIST'){\n\n    return sortedList(new List(sortedList(action.data)));\n  }\n\n  if(action.type === 'ADDITEM'){\n\n    let newState = state.toArray();\n    newState.push({id:Math.random().toString(36).substr(2, 9),text:action.item, done:false, date:new Date()});\n    return sortedList(new List(sortedList(newState)));\n  }\n\n  if(action.type === 'REMOVEITEM'){\n\n    const newState = state.filter(todo => todo.id !== action.id);\n\n    if(newState.size === 0){\n      return new List();\n    }\n\n    return sortedList(new List(sortedList(newState)));\n  }\n\n  if(action.type === 'CHANGESTATUS'){\n\n    const newState = state\n      .map(todo => {\n        todo.done = todo.id === action.id ? !todo.done : todo.done;\n        return todo;\n      })\n      .toArray();\n\n    return new List(sortedList(newState));\n  }\n\n  if(action.type === 'REMOVEALL'){\n\n    return new List();\n  }\n\n  return state;\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport {createStore,applyMiddleware,combineReducers} from 'redux';\nimport thunkMiddleware from 'redux-thunk';\nimport {Provider} from 'react-redux';\n\nimport {todo} from './reducers/todo';\n\nconst reducers = combineReducers({todo});\nconst store = createStore(reducers,applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>\n, document.getElementById('root'));\n"],"sourceRoot":""}